{
  "swagger": "2.0",
  "info": {
    "description": "Sample CMS API Server",
    "version": "1.0.0",
    "title": "CMS Swagger",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "customer",
      "description": "customer"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/customer": {
      "post": {
        "tags": [
          "customer"
        ],
        "summary": "Add a new customer to the store",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Customer object that needs to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Customer"
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Phone Number or Email in Use",
            "schema": {
              "$ref": "#/definitions/APIResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "customer"
        ],
        "summary": "Returns a list of customers",
        "description": "Returns a list customers",
        "operationId": "getPetById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "search term",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "number of customers to take",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "number of customers to skip",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      }
    },
    "/customer/{customerId}": {
      "get": {
        "tags": [
          "customer"
        ],
        "summary": "Find customer by ID",
        "description": "Returns a single customer",
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of customer to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "404": {
            "description": "No Such Customer Found",
            "schema": {
              "$ref": "#/definitions/APIResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "customer"
        ],
        "summary": "Updates a customer",
        "description": "Updates a customer. Null fields are treated as deletions",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of the customer that needs to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Customer object that needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer updated",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "400": {
            "description": "Phone Number Or Email In Use",
            "schema": {
              "$ref": "#/definitions/APIResponse"
            }
          },
          "404": {
            "description": "No Such Customer",
            "schema": {
              "$ref": "#/definitions/APIResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "customer"
        ],
        "summary": "Deletes a customer",
        "description": "deletes a customer",
        "operationId": "deletePet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customer id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "API response",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Address": {
      "type": "object",
      "properties": {
        "streetName": {
          "type": "string"
        },
        "houseNumber": {
          "type": "integer",
          "format": "int32"
        },
        "city": {
          "type": "string"
        },
        "stateOrProvince": {
          "type": "string"
        }
      }
    },
    "Customer": {
      "type": "object",
      "required": [
        "name",
        "email",
        "phoneNumber",
        "address"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "example": "johndoe@email.com"
        },
        "phoneNumber": {
          "type": "string",
          "example": "+19025554444"
        },
        "address": {
          "$ref": "#/definitions/Address"
        }
      }
    },
    "APIResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Success": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "ok"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}